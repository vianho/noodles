{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile"
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "python .projenrc.py"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install and upgrade dependencies",
      "steps": [
        {
          "exec": "pip install --upgrade pip"
        },
        {
          "exec": "pip install -r requirements.txt"
        },
        {
          "exec": "pip install -r requirements-dev.txt"
        }
      ]
    },
    "install:snyk": {
      "name": "install:snyk",
      "steps": [
        {
          "exec": "mkdir -p .bin"
        },
        {
          "exec": "yarn global add snyk snyk-delta"
        },
        {
          "exec": "wget -O ./.bin/snyk-pr-diff https://github.com/snyk-playground/cx-tools/raw/ed3737a48ab2f82fc6aa7b8878e052e4efb7754c/snyk-pr-diff/bin/snyk-pr-diff-amd64-linux"
        },
        {
          "exec": "chmod +x ./.bin/snyk-pr-diff"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "sca": {
      "name": "sca",
      "steps": [
        {
          "exec": "snyk test --prune-repeated-subdependencies --severity-threshold=high",
          "receiveArgs": true
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "pytest"
        }
      ]
    }
  },
  "env": {
    "VIRTUAL_ENV": "$(echo $PWD/.env)",
    "PATH": "$(echo $PWD/.env/bin:$PATH)"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.py and run \"npx projen\"."
}
